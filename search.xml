<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>打卡第八天</title>
      <link href="2021/05/18/da-qia-di-ba-tian/"/>
      <url>2021/05/18/da-qia-di-ba-tian/</url>
      
        <content type="html"><![CDATA[<blockquote></blockquote><p><img src="/imgs/image-20210518082511690.png" alt="image-20210518082511690"></p><blockquote><h3 id="软件设计师"><a href="#软件设计师" class="headerlink" title="软件设计师"></a>软件设计师</h3></blockquote><p>上下文无关文法:形式语言理论中一种重要的变换文法，用来描述上下文无关语言，在<code>乔姆斯基分层中称为2型文法</code>。由于程序设计语言的<code>语 法</code>基本上都是<code>上下文无关文法</code>,因此应用十分广泛。</p><p>本题考查UML类图之间类与类之间的关系。<br>UML类图中类与类之间的关系有五种:依赖、关联、聚合、组合与继承。依赖是几种关系中最弱的一种关系，通常，使用类库就是其中的一种关系。聚合与组合都表示了整体和部分的关系。</p><p><code>组合的程度比聚合高</code>，<code>当整体对象消失时,部分对象也随之消失</code>,则属于<code>组合</code>关系，当整体对象消失而部分对象依然可以存在并继续被使用时，则属于<code>聚合</code>关系。</p><p><code>改正性维护</code>:在软件交付使用后，必然会有一部分隐藏的错误被带到运行阶段来。 这些隐藏下来的错误在某些特定的使用环境下就会暴露出<br>来。为了<code>纠正这些错误</code>而对软件进行的维护工作就是改正性维护。<br><code>适应性维护</code>:随着计算机的飞速发展，<code>外部环境</code>(新的硬、软件配置)或数据环境(数据库、数据格式、 数据输入输出方式、数据存储介质)或应<br>用<code>环境</code>可能发生<code>变化</code>，为了<code>使软件适应这种变化</code>，而去修改软件的过程就叫做适应性维护。<br><code>完善性维护</code>:<code>在软件的使用过程中</code>，用户往往会对软件<code>提出新的功能与性能要求</code>。为了满足这些要求，需要修改或再开发软件，以扩充软件功能、增强软件性能、改进加工效率、提高软件的可维护性。这种情况下进行的维护活动叫做完善性维护。<br><code>预防性维护</code>:为了提高软件的可维护性、可靠性等而提出的一种维护类型，它为以后进一步改进软件打下良好基础。 通常，预防性维护定义为:“把今天的方法学用于昨天的系统以满足明天的需要”。也就是说，采用先进的软件工程方法对需要维护的软件或软件中的某一部分(重新)进行设计、编制和测试。<br>综上所述，本题的正确答案应选C。</p><p>[单选题]<br>某企业由于外部市场环境和管理需求的变化对现有软件系统提出新的需求，则对该软件系统进行的维护属于( ) 维护。<br>问题1选项<br>OA.正确性<br>O B.完善性<br>OC适应性<br>O D.预防性</p><p>动态语言是指程序在运行时可以改变其结构，例如新的函数可以被引进、已有的函数可以被删除等在结构上的变化等。动态语言的类型检<br>查是在运行时进行的，其优点是方便阅读，不需要写非常多的与类型相关的代码;缺点是不方便调试，命名不规范时会读不懂、不利于理解<br>等。<br>脚本语言代表一套与系统程序设计语言不同的协定。它们牺牲执行速度和与系统程序设计语言相关的类型长度而提供更高的编程创作能<br>力和软件重用。脚本语言更适合在联系复杂的应用程序中进行胶着(粘合)。为了简化连接组件的工作，脚本语言被设计为无类型的，脚本<br>语言一般是面向字符的，因为字符为许多不同的事物提供了一致的描述。<br>事实上，脚本语言都是动态语言，而动态语言都是解释型语言， 不管它们是否是面向对象的语言。</p><blockquote><p>linux系统的根目录是/<br>root超级用户的家目录是/root</p></blockquote><p>一个B类网络的子网掩码为255.255. 224.0 ,则这个网络被划分成了( ) 个子网。<br>问题1选项<br>OA.2<br>OB.4<br>Oc.6<br>OD.8<br>参考答案: D<br>民查看解析●收藏<br>你的答案: B<br><img src="/imgs/image-20210518235000043.png" alt="image-20210518235000043"></p><p><img src="/imgs/image-20210518235125614.png" alt="image-20210518235125614"></p><p><img src="/imgs/image-20210518235206048.png" alt="image-20210518235206048"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日任务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打卡第七天</title>
      <link href="2021/05/17/da-qia-di-qi-tian/"/>
      <url>2021/05/17/da-qia-di-qi-tian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>鸡汤</p></blockquote><h3 id="软件设计师每日一练错题"><a href="#软件设计师每日一练错题" class="headerlink" title="软件设计师每日一练错题"></a>软件设计师每日一练错题</h3><p>在Windows系统中,默认权限最低的用户组是( ) 。<br>问题1选项<br>O A.everyone<br>O B.administrators<br>O C.power users<br>O D.users</p><p>参考答案: A<br>你的答案: D<br>目试题解析:</p><p> <code>Everyone</code>即所有的用户 , 计算机上的所有用户都属于这个组,它的默认权限最低。<br><code>Administrators</code>即管理员组，默认情况下，Administrators中的用户对计算机域有不受限制的完全访问权。分配给该组的默认权限允许对整个系统进行完全控制,该组拥有最高的默认权限。<br><code>power users</code>即高级用户组，它可以执行除了为Administrators组保留的任务外的其他任何操作系统任务，它的默认权限仅次于Administrators.<br><code>Users</code>即普通用户组，这个组的用户无法进行有意或无意的改动。因此，用户可以运行经过验证的应用程序，但不可以运行大多数旧版应用程序。Users 组是最安全的组，因为分配给该组的默认权限不允许成员修改操作系统的设置或用户资料。</p><p>[单选题]<br>设备驱动程序是直接与( ) 打交道的软件模块。一般而言，设备驱动程序的任务是接受来自与设备( ) 。<br>问题1选项<br>OA硬件<br>O B.办公软件<br>Oc编译程序<br>O D.连接程序<br>问题2选项<br>OA有关的上层软件的抽象请求，进行与设备相关的处理<br>O B.无关的.上层软件的抽象请求,进行与设备相关的处理<br>OC.有关的上层软件的抽象请求，进行与设备无关的处理<br>O D.无关的上层软件的抽象请求，进行与设备无关的处理</p><p>参考答案:A、E<br>你的答案:A、A<br>自试题解析:<br>本题考查的是操作系统设备管理中的基础知识。<br>设备驱动程序是直接与硬件打交道的软件模块。一般而言 ，设备驱动程序的任务是接受来自于<code>设备无关的上层软件的抽象请求</code>，进行与设备相关的处理。</p><p>(一)对于第一空,本题使用的是贪心法。<br>1、<code>分治法</code>特征:对于一个规模为n的问题，若该问题可以容易地解决(比如说规模n较小)则直接解决;否则将其分解为k个规模较小的子问<br>题,这些子问题互相独立且与原问题形式相同,递归地解这些子问题,然后将各子问题的解合并得到原问题的解。<br>2、<code>动态规划法</code>:在求解问题中，对于每一步决策 ，列出各种可能的局部解，再依据某种判定条件，舍弃那些肯定不能得到最优解的局部解,<br>在每一步都经过筛选 ，以每一步都是 最优解来保证全局是最优解。本题情景没有列出所有的可能解进行筛选，因此，本题不属于动态规划<br>法。<br>3、<code>回溯法</code>:回溯法是一种选优搜索法，按选优条件向前搜索，以达到目标。但当搜索到某一步时，发现原先选择并不优或达不到目标,就退<br>回一步重新选择。这种走不通就退回再走的技术就是回溯法。本题情景没有探索和回退的过程，因此，本题不属于回溯法。<br>4、<code>贪心法</code>:总是做出在当前来说是最好的选择，而并不从整体上加以考虑，它所做的每步选择只是当前步骤的局部最优选择，但从整体来说<br>不一定是最优的选择。由于它不必为了寻找最优解而穷尽所有可能解，因此其耗费时间少，一 般可以快速得到满意的解，但得不到最优解。<br>5、“能够覆盖左侧第一栋房子的最远位置，放置消防栓”为策略进行处理，取当前位置最优，因此本题属于贪心法的算法思想。<br>(二)对于第二空,时间复杂度。<br>由于本题的算法过程，是依次与各个房子进行判断，当所有房子都被比较之后，则问题结束，因此时间复杂度与房子的个数相关，本问题的<br>时间复杂度应该趋于现象，为O(n)。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日任务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打卡第六天</title>
      <link href="2021/05/16/da-qia-di-liu-tian/"/>
      <url>2021/05/16/da-qia-di-liu-tian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>不要对亲近的人说谢谢。谢谢这个词意味着距离感，对朋友可以说「 兄弟，真棒」对，爱人可以说「宝贝，爱你」</p></blockquote><p><img src="/imgs/image-20210516084619821.png" alt="image-20210516084619821"></p><h3 id="软件设计师错题整理"><a href="#软件设计师错题整理" class="headerlink" title="软件设计师错题整理"></a>软件设计师错题整理</h3><blockquote><p>BIOS（基本输入输出系统）是一组固化到计算机内主板上一个ROM芯片上的程序</p><p>奇偶校验只能查错不能纠错</p><p>公开加密是非对称加密，共享加密是对称加密</p><p>结构化分析的结果：一套分层的数据流图、一本数据字典、一组小说明（也称逻辑加工说明）、补充材料。</p><p>短路运算：</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 每日任务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打卡第五天</title>
      <link href="2021/05/15/da-qia-di-wu-tian/"/>
      <url>2021/05/15/da-qia-di-wu-tian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>公钥：加密和验证（对称加密、共享加密）</p><p>私钥：解密和签名</p><p>CA机构 权威机构</p><p>CA题目一般与CA相关</p></blockquote><h2 id="软件设计师"><a href="#软件设计师" class="headerlink" title="软件设计师"></a>软件设计师</h2><p><img src="/imgs/image-20210515072049180.png" alt="image-20210515072049180"></p><p><img src="/imgs/image-20210515072539026.png" alt="image-20210515072539026"></p><p><img src="/imgs/image-20210515072819985.png" alt="image-20210515072819985"></p><p><img src="/imgs/image-20210515072949024.png" alt="image-20210515072949024"></p><p><img src="/imgs/image-20210515073051360.png" alt="image-20210515073051360"></p><p><img src="/imgs/image-20210515073420406.png" alt="image-20210515073420406"></p><p><img src="/imgs/image-20210515074137366.png" alt="image-20210515074137366"></p><p><img src="/imgs/image-20210515074329890.png" alt="image-20210515074329890"></p><p><img src="/imgs/image-20210515074556018.png" alt="image-20210515074556018"></p><p><img src="/imgs/image-20210515074700873.png" alt="image-20210515074700873"></p><p><img src="/imgs/image-20210515074916182.png" alt="image-20210515074916182"></p><p><img src="/imgs/image-20210515074848819.png" alt="image-20210515074848819"></p><p><img src="/imgs/image-20210515075044782.png" alt="image-20210515075044782"></p><p><img src="/imgs/image-20210515075254050.png" alt="image-20210515075254050"></p><p><img src="/imgs/image-20210515075345191.png" alt="image-20210515075345191"></p><p><img src="/imgs/image-20210515075624220.png" alt="image-20210515075624220"></p><p><img src="/imgs/image-20210515075822628.png" alt="image-20210515075822628"></p><p><img src="/imgs/image-20210515080524302.png" alt="image-20210515080524302"></p><p><img src="/imgs/image-20210515080643927.png" alt="image-20210515080643927"></p><p><img src="/imgs/image-20210515080825235.png" alt="image-20210515080825235"></p><p><img src="/imgs/image-20210515081215093.png" alt="image-20210515081215093"></p><p><img src="/imgs/image-20210515081819435.png" alt="image-20210515081819435"></p><p><img src="/imgs/image-20210515082021148.png" alt="image-20210515082021148"></p><p><img src="/imgs/image-20210515082112287.png" alt="image-20210515082112287"></p><p><img src="/imgs/image-20210515082223190.png" alt="image-20210515082223190"></p><p><img src="/imgs/image-20210515082504546.png" alt="image-20210515082504546"></p><p><img src="/imgs/image-20210515082552186.png" alt="image-20210515082552186"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日任务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打卡第四天</title>
      <link href="2021/05/14/da-qia-di-si-tian/"/>
      <url>2021/05/14/da-qia-di-si-tian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>承认自己的无知乃是开启智慧的大门–苏格拉底</p></blockquote><p><img src="/imgs/image-20210514070807488.png" alt="image-20210514070807488"></p><h2 id="软件设计师"><a href="#软件设计师" class="headerlink" title="软件设计师"></a>软件设计师</h2><blockquote><p>优缺点不怎么考，主要考逻辑地址也物理地址的转换</p><p>通过页面大小4k计算，业内地址，4k=2^12B,业内偏移不变的位数（16进制）</p></blockquote><p><img src="/imgs/image-20210514070539212.png" alt="image-20210514070539212"></p><blockquote><p>LRU算法：淘汰最近没有被访问过的页,看不出来，看修改位未被修改过</p></blockquote><p><img src="/imgs/image-20210514072003738.png" alt="image-20210514072003738"></p><blockquote><p>Tips地址从0开始，一级索引的物理块号，磁盘大小/地址大小-直接索引+1=一级间接索引，注意单位统一</p></blockquote><p><img src="/imgs/image-20210514072552504.png" alt="image-20210514072552504"></p><p><img src="/imgs/image-20210514073557488.png" alt="image-20210514073557488"></p><p><img src="/imgs/image-20210514073638489.png" alt="image-20210514073638489"></p><p><img src="/imgs/image-20210514073739774.png" alt="image-20210514073739774"></p><p><img src="/imgs/image-20210514073825599.png" alt="image-20210514073825599"></p><p><img src="/imgs/image-20210514074947130.png" alt="image-20210514074947130"></p><p><img src="/imgs/image-20210514075053170.png" alt="image-20210514075053170"></p><p><img src="/imgs/image-20210514075123103.png" alt="image-20210514075123103"></p><p><img src="/imgs/image-20210514075600413.png" alt="image-20210514075600413"></p><blockquote><p>越往上越逻辑,三级模式两级映射</p></blockquote><p><img src="/imgs/image-20210514075650272.png" alt="image-20210514075650272"></p><p><img src="/imgs/image-20210514080211953.png" alt="image-20210514080211953"></p><p><img src="/imgs/image-20210514080246691.png" alt="image-20210514080246691"></p><p><img src="/imgs/image-20210514080338487.png" alt="image-20210514080338487"></p><p><img src="/imgs/image-20210514080420654.png" alt="image-20210514080420654"></p><blockquote><p>如题存在部分函数依赖，一级范式最lose的范式</p></blockquote><p><img src="/imgs/image-20210514080723716.png" alt="image-20210514080723716"></p><blockquote><p><code>无损分解：</code>分解R1-R2=R1有，R2没有，通过他，他们共同的字母去推，什么都推不出来是有损分解</p><p><code>函数依赖</code>看分解的式子中是否能推导</p></blockquote><p><img src="/imgs/image-20210514081236036.png" alt="image-20210514081236036"></p><p><img src="/imgs/image-20210514082013968.png" alt="image-20210514082013968"></p><p><img src="/imgs/image-20210514082102563.png" alt="image-20210514082102563"></p><blockquote><p>把操作相关的写到日志文件里，数据相关的写到数据文件里</p></blockquote><p><img src="/imgs/image-20210514082146441.png" alt="image-20210514082146441"></p><p><img src="/imgs/image-20210514082348180.png" alt="image-20210514082348180"></p><p><img src="/imgs/image-20210514082422741.png" alt="image-20210514082422741"></p><p><img src="/imgs/image-20210514082737556.png" alt="image-20210514082737556"></p><blockquote><p>自然连接：重复的只显示一次</p></blockquote><p><img src="/imgs/image-20210514083019339.png" alt="image-20210514083019339"></p><p><img src="/imgs/image-20210514083159033.png" alt="image-20210514083159033"></p><p><img src="/imgs/image-20210514083348851.png" alt="image-20210514083348851"></p><p><img src="/imgs/image-20210514083439622.png" alt="image-20210514083439622"></p><p><img src="/imgs/image-20210514083522013.png" alt="image-20210514083522013"></p><p><img src="/imgs/image-20210514083633934.png" alt="image-20210514083633934"></p><p><img src="/imgs/image-20210514083708219.png" alt="image-20210514083708219"></p><p><img src="/imgs/image-20210514084021389.png" alt="image-20210514084021389"></p><p><img src="/imgs/image-20210514084113593.png" alt="image-20210514084113593"></p><p><img src="/imgs/image-20210514084203255.png" alt="image-20210514084203255"></p><p><img src="/imgs/image-20210514084239515.png" alt="image-20210514084239515"></p><p><img src="/imgs/image-20210514084311024.png" alt="image-20210514084311024"></p><p><img src="/imgs/image-20210514084349901.png" alt="image-20210514084349901"></p><p><img src="/imgs/image-20210514084424915.png" alt="image-20210514084424915"></p><p><img src="/imgs/image-20210514084514254.png" alt="image-20210514084514254"></p><p><img src="/imgs/image-20210514084608643.png" alt="image-20210514084608643"></p><p><img src="/imgs/image-20210514084645355.png" alt="image-20210514084645355"></p><p><img src="/imgs/image-20210514084732000.png" alt="image-20210514084732000"></p><p><img src="/imgs/image-20210514084823821.png" alt="image-20210514084823821"></p><h3 id><a href="#" class="headerlink" title></a></h3><video id="video" width="500px" height="500px" controls preload="none">      <source id="mp4" src="https://cdn.jsdelivr.net/gh/JackWang-web/JackWang-web.github.io/videos/承认自己的无知，乃是开启智慧的大门【罗翔教授】.mp4" type="video/mp4"></video>]]></content>
      
      
      
        <tags>
            
            <tag> 每日任务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打卡第三天</title>
      <link href="2021/05/13/da-qia-di-san-tian/"/>
      <url>2021/05/13/da-qia-di-san-tian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>心语分享:人生路上抉择时需要大胆自私一点，面前的这口食,你不吃很快就被别人吃了，没时间给你顾虑</p></blockquote><h2 id="软件设计师"><a href="#软件设计师" class="headerlink" title="软件设计师"></a>软件设计师</h2><p>循环冗余校验码：使用多项式除法（模2除法）</p><p>通过多项式求多项式编码</p><p><img src="/imgs/image-20210513080623440.png" alt="image-20210513080623440"></p><p><img src="/imgs/image-20210513080739085.png" alt="image-20210513080739085"></p><p><img src="/imgs/image-20210513080819113.png" alt="image-20210513080819113"></p><p><img src="/imgs/image-20210513080859138.png" alt="image-20210513080859138"></p><p><code>注意吞吐率(指令条数除以流水线)的计算与时间转换</code></p><p><img src="/imgs/image-20210513080938311.png" alt="image-20210513080938311"></p><p><code>加速比=正常（串行）/并行</code></p><p><img src="/imgs/image-20210513081845676.png" alt="image-20210513081845676"></p><p><img src="/imgs/image-20210513082736016.png" alt="image-20210513082736016"></p><p><img src="/imgs/image-20210513082818703.png" alt="image-20210513082818703"></p><p><code>1Byte=8bit 1K = 1024 byte</code></p><p><img src="/imgs/image-20210513083717718.png" alt="image-20210513083717718"></p><p><img src="/imgs/image-20210513084549535.png" alt="image-20210513084549535"></p><p><img src="/imgs/image-20210513084711769.png" alt="image-20210513084711769"></p><p><img src="/imgs/image-20210513084916760.png" alt="image-20210513084916760"></p><p><img src="/imgs/image-20210513085004777.png" alt="image-20210513085004777"></p><p><img src="/imgs/image-20210513085036219.png" alt="image-20210513085036219"></p><p><img src="/imgs/image-20210513085109014.png" alt="image-20210513085109014"></p><p><img src="/imgs/image-20210513090153310.png" alt="image-20210513090153310"></p><p><img src="/imgs/image-20210513090253137.png" alt="image-20210513090253137"></p><p><img src="/imgs/image-20210513090355116.png" alt="image-20210513090355116"></p><h2 id="省考"><a href="#省考" class="headerlink" title="省考"></a>省考</h2><p>样式运算</p><p><img src="/imgs/image-20210513092031018.png" alt="image-20210513092031018"></p><p><img src="/imgs/image-20210513092331331.png" alt="image-20210513092331331"></p><p>同（样式求同）：不关注大小，比例，面积，看形状</p><p><img src="/imgs/image-20210513092741798.png" alt="image-20210513092741798"></p><p>异：去同+旋转</p><p><img src="/imgs/image-20210513092834362.png" alt="image-20210513092834362"></p><p><img src="/imgs/image-20210513093756593.png" alt="image-20210513093756593"></p><p>数量类：</p><p><img src="/imgs/image-20210513095550684.png" alt="image-20210513095550684"></p><p><img src="/imgs/image-20210513095609437.png" alt="image-20210513095609437"></p><p><img src="/imgs/image-20210513095811963.png" alt="image-20210513095811963"></p><p><img src="/imgs/image-20210513100053924.png" alt="image-20210513100053924"></p><p><img src="/imgs/image-20210513100234646.png" alt="image-20210513100234646"></p><p><img src="/imgs/image-20210513100409498.png" alt="image-20210513100409498"></p><p><img src="/imgs/image-20210513100626556.png" alt="image-20210513100626556"></p><p><img src="/imgs/image-20210513100823180.png" alt="image-20210513100823180"></p><p><img src="/imgs/image-20210513101257126.png" alt="image-20210513101257126"></p><p><img src="/imgs/image-20210513101512010.png" alt="image-20210513101512010"></p><p><img src="/imgs/image-20210513101723353.png" alt="image-20210513101723353"></p><p><img src="/imgs/image-20210513101856524.png" alt="image-20210513101856524"></p><p><img src="/imgs/image-20210513102226906.png" alt="image-20210513102226906"></p><p><img src="/imgs/image-20210513102241071.png" alt="image-20210513102241071"></p><p><img src="/imgs/image-20210513102547255.png" alt="image-20210513102547255"></p><p><img src="/imgs/image-20210513102729706.png" alt="image-20210513102729706"></p><p><img src="/imgs/image-20210513102910345.png" alt="image-20210513102910345"></p><p><img src="/imgs/image-20210513102933649.png" alt="image-20210513102933649"></p><p>纯黑考虑部分</p><p><img src="/imgs/image-20210513103102058.png" alt="image-20210513103102058"></p><p>属性类：</p><p><img src="/imgs/image-20210513103548022.png" alt="image-20210513103548022"></p><p><img src="/imgs/image-20210513103609237.png" alt="image-20210513103609237"></p><p><img src="/imgs/image-20210513103645123.png" alt="image-20210513103645123"></p><p><img src="/imgs/image-20210513103723054.png" alt="image-20210513103723054"></p><p><img src="/imgs/image-20210513103807355.png" alt="image-20210513103807355"></p><p><img src="/imgs/image-20210513103856337.png" alt="image-20210513103856337"></p><p><img src="/imgs/image-20210513103914576.png" alt="image-20210513103914576"></p><p><img src="/imgs/image-20210513104124920.png" alt="image-20210513104124920"></p><p><img src="/imgs/image-20210513104302929.png" alt="image-20210513104302929"></p><p><img src="/imgs/image-20210513104422745.png" alt="image-20210513104422745"></p><p><img src="/imgs/image-20210513104538306.png" alt="image-20210513104538306"></p><p><img src="/imgs/image-20210513104706687.png" alt="image-20210513104706687"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 每日任务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打卡第二天</title>
      <link href="2021/05/12/da-qia-di-er-tian/"/>
      <url>2021/05/12/da-qia-di-er-tian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>总线：任意连接两个以上的电子元器件的导线，分类：</p><p>​            芯片级别，板线级别，设备级别</p><p>半双工：同一时刻只能传输在同一个方向上传输信息</p><p>全双工：同一时刻在传输在两个方向上传输信息</p><p>消息认证算法==信息摘要算法</p><p>公开密钥加密算法=非对称加密算法=公钥是公开的</p><p>DES是对称加密算法，非对称：ECC，DSA，RSA</p><p>数字签名的作用：主要验证发送方的真实性，数字签名主要是针对发送方。</p><p>数字证书的真伪：看是谁颁发的</p><p>阻塞节点：资源已经分配完了，还有资源来请求它</p><p>资源：先分配再使用</p><p>进程的调度：抢占式与非抢占式（抢占CPU），V操作加1，P操作减1</p><p>如果当前线程未阻塞，执行完当前线程，再去执行阻塞的线程</p><p>不会发生死锁：先假设会发生死锁的最大资源数最后再加1</p><p>银行家算法：找出序列是否是安全，在按照序列进行执行，使用总资源数减去已分配资源数得到剩余资源数。</p></blockquote><blockquote><h3 id="图形推理1：-动态位置"><a href="#图形推理1：-动态位置" class="headerlink" title="图形推理1：(动态位置)"></a>图形推理1：(动态位置)</h3><p>1.平移：</p><p>​    前提条件：图形组成元素相同</p><p>​    固定变化的一处地方，观察变化的<code>方向</code>和<code>距离</code></p><p>2.旋转：</p><p>​    方向、角度（肉眼可见角度）</p><p>​    Tips：顺时针旋转90度，5次得到原图</p><p>3.翻转==轴对称</p><p><img src="/imgs/image-20210512205301825.png" alt="image-20210512205301825"></p><h3 id="图形推理2：（静态位置）"><a href="#图形推理2：（静态位置）" class="headerlink" title="图形推理2：（静态位置）"></a>图形推理2：（静态位置）</h3><p>元素之间的之间</p><p><img src="/imgs/image-20210512210326297.png"></p><p><img src="/imgs/image-20210512210455833.png"></p><p><img src="/imgs/image-20210512210747176.png" alt="image-20210512210747176"></p><p>分组类题目：<code>相隔、相连重点</code></p><p><img src="/imgs/image-20210512211033395.png" alt="image-20210512211033395"></p><p><img src="/imgs/image-20210512211515705.png" alt="image-20210512211515705"></p><p>相连：看接触的位置</p><p><img src="/imgs/image-20210512211821346.png" alt="image-20210512211821346"></p><p><img src="/imgs/image-20210512212319009.png" alt="image-20210512212319009"></p><h3 id="图形推理3（样式类）"><a href="#图形推理3（样式类）" class="headerlink" title="图形推理3（样式类）"></a>图形推理3（样式类）</h3><p><img src="/imgs/image-20210512212645586.png" alt="image-20210512212645586"></p><p>1.样式遍历（全部出现一次）</p><p><img src="/imgs/image-20210512213132023.png" alt="image-20210512213132023"></p><p><img src="/imgs/image-20210512213211991.png" alt="image-20210512213211991"></p><p>2.样式运算（稍微难）</p><p><img src="/imgs/image-20210512213414323.png" alt="image-20210512213414323"></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 每日任务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打卡第一天</title>
      <link href="2021/05/11/jin-ri-ren-wu/"/>
      <url>2021/05/11/jin-ri-ren-wu/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1498342485&amp;auto=0&amp;height=66"></iframe><blockquote><p>1.一套软件设计师真题，复习精华知识点第一讲。</p></blockquote><p>自己总是在下完目标之后，被其他事情所影响了完成进度。</p><blockquote><p>当下解决：在有限的时间内完成目标</p></blockquote><p>1.一套软件设计师真题，复习精华知识点第一讲。==2小时==</p><blockquote><p>学习完之后，晚上对一天的所学进行复盘</p><p>设置闹钟：23:30</p></blockquote><blockquote><p>容易被打扰解决，弄一个待办，把当下任务做完再去完成次要的：</p><p>1.找回网盘自律资料</p><p>2.看学校官网招聘</p></blockquote><blockquote><p>content one：</p><p>PC（程序计数器）:存放下一条指令要执行的地址 </p><p>浮点数：阶码影响范围，尾数影响精度（联想科学记数法）</p><p>数据位1100，求多项式编码:X^3+X+1==1011 。X^2没有</p><p>数据信息位加最高幂子数个0，商不用管</p><p>CRC编码：信息位+余数</p><p>吞吐率：单位时间内指令执行的条数</p><p><u>最大</u>加速比：不使用加速/使用加速；不使用加速直接全部相加，使用加速公式，最长的为周期，n-1条指令(任务)乘以周期</p><p>指令的平均读取时间=指令读取时间+数据读取时间</p><p>1到3有3个数，3-1+1=3</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 每日任务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我想带你一起蜕变！你准备好了吗？</title>
      <link href="2021/05/10/wo-xiang-dai-ni-yi-qi-shui-bian-ni-zhun-bei-hao-liao-ma/"/>
      <url>2021/05/10/wo-xiang-dai-ni-yi-qi-shui-bian-ni-zhun-bei-hao-liao-ma/</url>
      
        <content type="html"><![CDATA[<blockquote><p>自律不是自虐,而是建立一种生活认知和习惯。当自律成为你的属性时一切都会变得简单起来。</p></blockquote><blockquote><p>从现在自律起来，一切交给时间，总有一天会站在曾经想要去的地方。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自律 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件设计师中级下午题总结</title>
      <link href="2021/05/06/ruan-jian-she-ji-shi-zhong-ji-xia-wu-ti-zong-jie/"/>
      <url>2021/05/06/ruan-jian-she-ji-shi-zhong-ji-xia-wu-ti-zong-jie/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> 软件设计师中级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件设计师中级上午题总结</title>
      <link href="2021/05/06/ruan-jian-she-ji-shi-zhong-ji-shang-wu-ti-zong-jie/"/>
      <url>2021/05/06/ruan-jian-she-ji-shi-zhong-ji-shang-wu-ti-zong-jie/</url>
      
        <content type="html"><![CDATA[<blockquote><p>“广记不如淡墨”，谚语，意思是死记不如用笔写下来。</p></blockquote><h2 id="1-McCabe度量法求环路复杂度"><a href="#1-McCabe度量法求环路复杂度" class="headerlink" title="1.McCabe度量法求环路复杂度"></a>1.McCabe度量法求环路复杂度</h2><p><img src="https://cdn.jsdelivr.net/gh/JackWang-web/JackWang-web.github.io/imgs/image-20210510083812006.png" alt="image-20210510083812006"></p><h3 id="1-1-方法1：封闭区域数-m-，环路复杂度-m-1"><a href="#1-1-方法1：封闭区域数-m-，环路复杂度-m-1" class="headerlink" title="1.1 方法1：封闭区域数(m)，环路复杂度=m+1"></a>1.1 方法1：封闭区域数(m)，环路复杂度=m+1</h3><h3 id="1-2-方法2：边数（m）-节点数（n）-2"><a href="#1-2-方法2：边数（m）-节点数（n）-2" class="headerlink" title="1.2 方法2：边数（m）-节点数（n）+2"></a>1.2 方法2：边数（m）-节点数（n）+2</h3><p>tips：考试的时候两种方法都验证一下</p><p>个别题型：</p><p><img src="/imgs/image-20210510084826196.png" alt="image-20210510084826196"></p><p><img src="/imgs/image-20210510085028870.png" alt="image-20210510085028870"></p><h2 id="2-前驱图（2-3分）"><a href="#2-前驱图（2-3分）" class="headerlink" title="2.前驱图（2-3分）"></a>2.前驱图（2-3分）</h2><h3 id="题型1-分两步，1标信号量，从小到大，2看执行的位置"><a href="#题型1-分两步，1标信号量，从小到大，2看执行的位置" class="headerlink" title="题型1:分两步，1标信号量，从小到大，2看执行的位置"></a>题型1:分两步，1标信号量，从小到大，2看执行的位置</h3><p><img src="/imgs/image-20210510085557250.png" alt="image-20210510085557250"></p><h3 id="题型2："><a href="#题型2：" class="headerlink" title="题型2："></a>题型2：</h3><p><img src="/imgs/image-20210510090015470.png" alt="image-20210510090015470"></p><h2 id="3-有限自动机（1分）"><a href="#3-有限自动机（1分）" class="headerlink" title="3.有限自动机（1分）"></a>3.有限自动机（1分）</h2><h3 id="题型1：将答案带进自动机验证"><a href="#题型1：将答案带进自动机验证" class="headerlink" title="题型1：将答案带进自动机验证"></a>题型1：将答案带进自动机验证</h3><p><img src="/imgs/image-20210510090504588.png" alt="image-20210510090504588"></p><h3 id="题型2：带答案"><a href="#题型2：带答案" class="headerlink" title="题型2：带答案"></a>题型2：带答案</h3><p><img src="/imgs/image-20210510090728810.png" alt="image-20210510090728810"></p><h3 id="题型3：-0-1-表示0或1的组合出现0-n次"><a href="#题型3：-0-1-表示0或1的组合出现0-n次" class="headerlink" title="题型3：(0|1)* 表示0或1的组合出现0~n次"></a>题型3：(0|1)* 表示0或1的组合出现0~n次</h3><p><img src="/imgs/image-20210510091103482.png" alt="image-20210510091103482"></p><h3 id="题型4：等价图"><a href="#题型4：等价图" class="headerlink" title="题型4：等价图"></a>题型4：等价图</h3><p><img src="/imgs/image-20210510091554523.png" alt="image-20210510091554523"></p><h2 id="4-传值、引用调用函数（1-2分）"><a href="#4-传值、引用调用函数（1-2分）" class="headerlink" title="4.传值、引用调用函数（1-2分）"></a>4.传值、引用调用函数（1-2分）</h2><h3 id="4-1传值按正常逻辑走，传引用-amp-符号-实参不可以是表达式"><a href="#4-1传值按正常逻辑走，传引用-amp-符号-实参不可以是表达式" class="headerlink" title="4.1传值按正常逻辑走，传引用&amp;符号,实参不可以是表达式"></a>4.1传值按正常逻辑走，传引用&amp;符号,实参不可以是表达式</h3><p><img src="/imgs/image-20210510095542950.png" alt="image-20210510095542950"></p><p><img src="/imgs/image-20210510100217730.png" alt="image-20210510100217730"></p><p><img src="/imgs/image-20210510100458476.png" alt="image-20210510100458476"></p><p><img src="/imgs/image-20210510100755968.png" alt="image-20210510100755968"></p><h2 id="5-知识产权保护"><a href="#5-知识产权保护" class="headerlink" title="5.知识产权保护"></a>5.知识产权保护</h2><h2 id="6-KMP算法"><a href="#6-KMP算法" class="headerlink" title="6.KMP算法"></a>6.KMP算法</h2>]]></content>
      
      
      <categories>
          
          <category> 考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件设计师中级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习三步曲</title>
      <link href="2021/05/05/xue-xi-san-bu-qu/"/>
      <url>2021/05/05/xue-xi-san-bu-qu/</url>
      
        <content type="html"><![CDATA[<h3 id="学习三步曲："><a href="#学习三步曲：" class="headerlink" title="学习三步曲："></a>学习三步曲：</h3><p>JMM</p><h4 id="1-什么是JMM？（百度百科）"><a href="#1-什么是JMM？（百度百科）" class="headerlink" title="1.什么是JMM？（百度百科）"></a>1.什么是JMM？（百度百科）</h4><p>【JMM】（Java Memory Model的缩写）</p><h4 id="2-它是干嘛的？：官方。其他人的博客，对应视频！"><a href="#2-它是干嘛的？：官方。其他人的博客，对应视频！" class="headerlink" title="2.它是干嘛的？：官方。其他人的博客，对应视频！"></a>2.它是干嘛的？：官方。其他人的博客，对应视频！</h4><h4 id="3-它该如何学习？"><a href="#3-它该如何学习？" class="headerlink" title="3.它该如何学习？"></a>3.它该如何学习？</h4><p>==废掉一个人==<br>==最快的方法就是闲着==<br>==成就一个人 最快的速度就是：==<br>==目标清晰，持续坚持行动，和不断的执行努力！==</p><p><img src="https://cdn.jsdelivr.net/gh/JackWang-web/JackWang-web.github.io/imgs/1.jpg" alt="努力"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/05/04/hello-world/"/>
      <url>2021/05/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><blockquote><h3 id="使用总结："><a href="#使用总结：" class="headerlink" title="使用总结："></a>使用总结：</h3><p>1.执行多条命令</p><p><code>hexo g &amp;&amp; hexo s</code></p><p>2.在生成模板中的value值，遵循yml语法，使用空格隔开</p><p><code>- value</code></p><p>3.目录只是别2级与3级标题</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
